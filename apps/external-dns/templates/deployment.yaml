apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: "external-dns"
  labels: 
    app.kubernetes.io/name: external-dns
    helm.sh/chart: external-dns-6.11.2
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/name: external-dns
      app.kubernetes.io/instance: external-dns
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: external-dns
        app.kubernetes.io/instance: external-dns
    spec:
      
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: external-dns
                    app.kubernetes.io/instance: external-dns
                namespaces:
                  - "external-dns"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: external-dns
      containers:
        - name: external-dns
          image: "docker.io/bitnami/external-dns:0.13.1-debian-11-r0"
          imagePullPolicy: "IfNotPresent"
          
          args:
            - --provider=linode
            - --domain-filter={{ .Values.externalDns.txtOwnerId }}
            - --policy=sync
            - --interval=1m
            - --source=service
            - --source=ingress
            - --txt-owner-id={{ .Values.externalDns.domainFilter }}
          env:
          - name: LINODE_TOKEN
            valueFrom:
              secretKeyRef:
                name: akamai-api
                key: linode_token
                
          envFrom:
          ports:
            - name: http
              containerPort: 7979
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
      volumes:
