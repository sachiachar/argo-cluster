# Configure Argo CD in HA mode
argocd:
  fullnameOverride: "argocd"
  redis-ha:
    enabled: true

  controller:
    replicas: 1

  server:
    autoscaling:
      enabled: true
      minReplicas: 2
    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        #kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: letsencrypt
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      hosts:
      - continuous-deploy.obs.poc.sasriya.net
      tls:
      - secretName: argocd-secret
        hosts:
        - continuous-deploy.obs.poc.sasriya.net
    


  repoServer:
    autoscaling:
      enabled: true
      minReplicas: 2
    extraContainers:
    - name: cmp-kustomized-helm
      command:
      - "/var/run/argocd/argocd-cmp-server"
      image: alpine/k8s:1.27.2
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      env: 
      - name: HELM_CACHE_HOME
        value: /helm-working-dir
      - name: HELM_CONFIG_HOME
        value: /helm-working-dir
      - name: HELM_DATA_HOME
        value: /helm-working-dir
      volumeMounts:
      - mountPath: /var/run/argocd
        name: var-files
      - mountPath: /home/argocd/cmp-server/plugins
        name: plugins
      # Remove this volumeMount if you've chosen to bake the config file into the sidecar image.
      - mountPath: /home/argocd/cmp-server/config/plugin.yaml
        subPath: kustomized-helm.yaml
        name: argocd-cmp-cm
      - mountPath: /helm-working-dir
        name: helm-working-dir
      # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps
      # mitigate path traversal attacks.
      - mountPath: /tmp
        name: cmp-tmp
    volumes:
    - name: argocd-cmp-cm
      configMap:
        name: argocd-cmp-cm
    - emptyDir: {}
      name: cmp-tmp


  applicationSet:
    replicaCount: 2
  
  configs:
    cm:
      exec.enabled: true
    cmp:
      create: true
      plugins:
        kustomized-helm:
          init:
            command: ["/bin/sh", "-c"]
            args: ["helm dependency build"]
          generate:
            command: [sh, -c]
            args: ["echo \"$ARGOCD_ENV_HELM_VALUES\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE --api-versions $KUBE_API_VERSIONS $ARGOCD_ENV_HELM_ARGS -f - --include-crds > base/all.yaml && kustomize build \"$ARGOCD_ENV_KUSTOMIZE_DIR\""]